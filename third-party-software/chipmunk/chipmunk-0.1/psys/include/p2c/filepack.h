/* Header for module filepack, generated by p2c */
#ifndef FILEPACK_H
#define FILEPACK_H



#ifndef SYSGLOBALS_H
#include <p2c/sysglobals.h>
#endif

/*homeless orphans*/

#ifndef MISC_H
#include <p2c/misc.h>
#endif



#ifdef FILEPACK_G
# define vextern
#else
# define vextern extern
#endif



typedef Char fp_volumearray[50][26];

typedef enum {
    fp_keepit, fp_purgeit
} fp_closecode;

typedef misc_passentry fp_passarray[201];



extern Void fp_volumes PP((Char **v));
extern Void fp_filecopy PP((Char *filename1, Char *filename2, int writeover));
extern Void fp_filecopy2 PP((Char *filename1, Char *filename2, int writeover,
			     int saveDate));
extern Void fp_duplicate PP((Char *filename1, Char *filename2, int purgeold));
extern Void fp_change PP((Char *filename1, Char *filename2));
extern Void fp_makefile PP((Char *filename));
extern Void fp_makedir PP((Char *filename));
extern Void fp_remove PP((Char *filename));
extern Void fp_prefix PP((Char *filename, int unitonly, int sysvol));
extern boolean fp_getwd PP((Char *path, Char *rootname));
extern boolean fp_f_readable PP((Char *filename));
extern boolean fp_f_exists PP((Char *filename));
extern Void fp_f_flush PP((fib *outfib));
extern Void fp_stat PP((Char *path, misc_catentry *cat));
extern Void fp_fstat PP((fib *f, misc_catentry *cat));
extern Void fp_setFileTimes PP((Char *fn, int set_access, int set_create,
				misc_catentry *cat));
extern Void fp_fSetFileTimes PP((fib *f, int set_access, int set_create,
				 misc_catentry *cat));
extern Void fp_open_parentdir PP((fib *dirfib, Char *dirname,
				  misc_catentry *dirinfo));
extern Void fp_open_dir PP((fib *dirfib, Char *dirname,
			    misc_catentry *dirinfo));
extern Void fp_open_dir0 PP((fib *dirfib, Char *dirname,
			     misc_catentry *dirinfo));
extern Void fp_close_dir PP((fib *dfib));
extern Void fp_cat_dir PP((fib *dfib, short *numfiles, Anyptr *where));
extern Void fp_close_pass PP((fib *pfib));
extern Void fp_open_pass PP((fib *pfib, Char *fname, misc_passentry **owords));
extern Void fp_cat_pass PP((fib *pfib, short *numpass, misc_passentry *pwords));
extern Void fp_add_pass PP((fib *pfib, misc_passentry *entry_));
extern Void fp_bits_to_words PP((long b, misc_passentry *ow, Char *s));
extern Void fp_words_to_bits PP((Char *s, misc_passentry *ow, long *b));
extern Void fp_iocheck PV();
extern Void fp_badio PP((int iocode));
extern Void fp_setup_fib PP((Char *filename, fib *lfib, int needdirec));
extern Void fp_openinfile PP((fib *infib, Char *filename));
extern Void fp_openoutfile PP((fib *outfib, Char *filename));
extern Void fp_closeinfile PP((fib *infib));
extern Void fp_closeoutfile PP((fib *outfib, int option));
extern long fp_uwrite PP((fib *f, Char *buffer, long request));
extern long fp_uread PP((fib *f, Char *buffer, long request));



#undef vextern

#endif /*FILEPACK_H*/

/* End. */

