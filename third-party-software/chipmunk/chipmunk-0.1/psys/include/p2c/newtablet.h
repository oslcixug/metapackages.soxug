/* Header for module NEWTABLET, generated by p2c */
#ifndef NEWTABLET_H
#define NEWTABLET_H



#ifdef NEWTABLET_G
# define vextern
#else
# define vextern extern
#endif



typedef enum {
    nt_none, nt_tablet, nt_mouse, nt_dials, nt_knob
} nt_dev;

typedef Char nt_mkeytype[4][1 - 0 + 1];



#define nt_down         1024
#define nt_near         256

#define nt_minDev       nt_none
#define nt_maxDev       nt_knob



vextern long nt_dial[9];
vextern long nt_knobX, nt_knobY;
vextern boolean nt_IsCursor[(long)nt_maxDev - (long)nt_minDev + 1];
vextern nt_mkeytype nt_MButtonKey;
vextern nt_dev nt_PreferredTablet;



extern boolean nt_install PV( );
extern boolean nt_init PP((long device));
extern boolean nt_read PP((long *x, long *y, long *status));
extern Void nt_info PP((Char *s, long *xl, long *yl, long *xh, long *yh));
extern Void nt_devname PP((Char *s, int dev));
extern nt_dev nt_devtype PP((Char *s));
extern boolean nt_HasDevice PP((int dev));
extern Void nt_ReadDevice PP((int dev, long *x, long *y, long *status));
extern Void nt_DevChange PP((int dev, long *dx, long *dy, long *status));
extern Void nt_SetDevice PP((int dev, long x, long y));
extern Void nt_ReadMouse PP((long *x, long *y, long *mstatus));
extern Void nt_cleardials PV( );
extern long nt_dialchange PP((long dial));
extern Void nt_setdial PP((long dial, long val));
extern Void nt_ResetMouseButtons PV( );



#undef vextern

#endif /*NEWTABLET_H*/

/* End. */

