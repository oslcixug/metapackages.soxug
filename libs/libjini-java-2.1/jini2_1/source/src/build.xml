<!--
 ## 
 ## Copyright 2005 Sun Microsystems, Inc.
 ## 
 ## Licensed under the Apache License, Version 2.0 (the "License");
 ## you may not use this file except in compliance with the License.
 ## You may obtain a copy of the License at
 ## 
 ## 	http://www.apache.org/licenses/LICENSE-2.0
 ## 
 ## Unless required by applicable law or agreed to in writing, software
 ## distributed under the License is distributed on an "AS IS" BASIS,
 ## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ## See the License for the specific language governing permissions and
 ## limitations under the License.
 ## 
 -->

<project name="src" basedir="." default="all">

  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## ENVIRONMENT SETTINGS						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <property name="top" location=".."/>

  <!-- ##								-->
  <!-- ## Set java-source for use with the javac task:			-->
  <!-- ##								-->

  <property name="java-source" value="**/*.java" />
  
  <import file="${top}/build_common.xml"/>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: all							-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="all"
          description=""
          depends="compile">
  </target>


  <!-- ################################################################ -->
  <!-- ##                                                               -->
  <!-- ## TARGET: clean                                                 -->
  <!-- ##                                                               -->
  <!-- ################################################################ -->

  <target name="clean"
          description="Removes all files and dirs created by the build."
          depends="clean.all">

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: this.jars						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="this.jars"
          description="Generate top-level jars.  Note that some of these jars are
		       order dependent."
          depends="jini-core.jar,
		   jini-ext.jar,
		   jsk-dl.jar,
		   jsk-lib.jar,
		   jsk-resources.jar,
		   jsk-platform.jar,
		   jsk-policy.jar,
		   sun-util.jar,
		   toolwrappers">

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: toolwrappers						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="toolwrappers"
	  depends="tools-jar,
		   checkconfigurationfile.jar,
		   checkser.jar,
		   classdep.jar,
		   classserver.jar,
		   computedigest.jar,
		   computehttpmdcodebase.jar,
		   jsk-debug-policy.jar,
		   jarwrapper.jar,
		   preferredlistgen.jar,
		   envcheck.jar">
  
  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: checkconfigurationfile.jar				-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="checkconfigurationfile.jar"
	  depends="setup-all,
		   start.jar">

    <delete file="${build.lib}/checkconfigurationfile.jar" quiet="true" />

    <java classname="com.sun.jini.tool.JarWrapper"
	  classpath="${build.classes}"
          failonerror="true">

      <arg line="-manifest=${src.tools.manifest}/checkconfigurationfile.mf"/>
      <arg line="${build.lib}/checkconfigurationfile.jar"		/>
      <arg line="${build.lib}"						/>
      <arg line="tools.jar"						/>
    </java>

  </target>

  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: checkser.jar						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="checkser.jar"
	  depends="setup-all">

    <delete file="${build.lib}/checkser.jar" quiet="true" />

    <java classname="com.sun.jini.tool.JarWrapper"
	  classpath="${build.classes}"
          failonerror="true">

      <arg line="-manifest=${src.tools.manifest}/checkser.mf"	/>
      <arg line="${build.lib}/checkser.jar"			/>
      <arg line="${build.lib}"					/>
      <arg line="tools.jar"					/>
    </java>

  </target>

  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: classdep.jar						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="classdep.jar"
	  depends="setup-all">

    <delete file="${build.lib}/classdep.jar" quiet="true" />

    <java classname="com.sun.jini.tool.JarWrapper"
	  classpath="${build.classes}"
          failonerror="true">

      <arg line="-manifest=${src.tools.manifest}/classdep.mf"	/>
      <arg line="${build.lib}/classdep.jar"			/>
      <arg line="${build.lib}"					/>
      <arg line="tools.jar"					/>
    </java>

  </target>

  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: classserver.jar					-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="classserver.jar"
	  depends="setup-all">

    <delete file="${build.lib}/classserver.jar" quiet="true" />

    <java classname="com.sun.jini.tool.JarWrapper"
	  classpath="${build.classes}"
          failonerror="true">

      <arg line="${build.lib}/classserver.jar"			/>
      <arg line="${build.lib}"					/>
      <arg line="tools.jar"					/>
    </java>

  </target>

  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: computedigest.jar					-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="computedigest.jar"
	  depends="setup-all">

    <delete file="${build.lib}/computedigest.jar" quiet="true" />

    <java classname="com.sun.jini.tool.JarWrapper"
	  classpath="${build.classes}"
          failonerror="true">

      <arg line="-manifest=${src.tools.manifest}/computedigest.mf"	/>
      <arg line="${build.lib}/computedigest.jar"			/>
      <arg line="${build.lib}"						/>
      <arg line="tools.jar"						/>
    </java>

  </target>

  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: computehttpmdcodebase.jar				-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="computehttpmdcodebase.jar"
	  depends="setup-all">

    <delete file="${build.lib}/computehttpmdcodebase.jar" quiet="true" />

    <java classname="com.sun.jini.tool.JarWrapper"
	  classpath="${build.classes}"
          failonerror="true">

      <arg line="-manifest=${src.tools.manifest}/computehttpmdcodebase.mf"/>
      <arg line="${build.lib}/computehttpmdcodebase.jar"		/>
      <arg line="${build.lib}"						/>
      <arg line="tools.jar"						/>
    </java>

  </target>

  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: jarwrapper.jar					-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="jarwrapper.jar"
	  depends="setup-all">

    <delete file="${build.lib}/jarwrapper.jar" quiet="true" />

    <java classname="com.sun.jini.tool.JarWrapper"
	  classpath="${build.classes}"
          failonerror="true">

      <arg line="-manifest=${src.tools.manifest}/jarwrapper.mf"	/>
      <arg line="${build.lib}/jarwrapper.jar"			/>
      <arg line="${build.lib}"					/>
      <arg line="tools.jar"					/>
    </java>

  </target>

  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: preferredlistgen.jar					-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="preferredlistgen.jar"
	  depends="setup-all">

    <delete file="${build.lib}/preferredlistgen.jar" quiet="true" />

    <java classname="com.sun.jini.tool.JarWrapper"
	  classpath="${build.classes}"
          failonerror="true">

      <arg line="-manifest=${src.tools.manifest}/preferredlistgen.mf"	/>
      <arg line="${build.lib}/preferredlistgen.jar"			/>
      <arg line="${build.lib}"						/>
      <arg line="tools.jar"						/>
    </java>

  </target>

  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: envcheck.jar						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="envcheck.jar"
	  depends="setup-all">

    <delete file="${build.lib}/envcheck.jar" quiet="true" />

    <java classname="com.sun.jini.tool.JarWrapper"
	  classpath="${build.classes}"
          failonerror="true">

      <arg line="-manifest=${src.tools.manifest}/envcheck.mf"	/>
      <arg line="${build.lib}/envcheck.jar"			/>
      <arg line="${build.lib}"					/>
      <arg line="tools.jar"					/>
    </java>

    <jar destfile="${build.lib}/envcheck.jar" 
	 update="true"
         index="false">
        
      <fileset	dir="${src.tools.manifest}/tools"
		includes="META-INF/services/com.sun.jini.tool.envcheck.Plugin" />
    </jar>


  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: jini-core.jar						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="jini-core.jar"
	  depends="setup-all">
  
    <delete file="${build.lib}/jini-core.jar" quiet="true" />

    <jar destfile="${build.lib}/jini-core.jar"
	 index="false">

      <fileset	dir="${build.classes}"
		includes="net/jini/core/**" />

    </jar>

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: jini-ext.jar						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="jini-ext.jar"
	  depends="setup-all">
  
    <property name="jini-ext.deps" location="${build.deps}/jini-ext.deps" />
    
    <!-- ##								-->
    <!-- ## Run ClassDep.						-->
    <!-- ##								-->

    <java classname="com.sun.jini.tool.ClassDep"
          failonerror="true"
          output="${jini-ext.deps}">
          
      <classpath refid="path.classdep"	/>
      <arg value="-cp"			/>
      <arg path="${build.classes}"	/>
      <arg value="-files"		/>

      <arg line="-in com.sun.jini"	/>
      <arg line="-in net.jini"		/>

      <arg line="-out net.jini.core"	/>

      <arg line="-prune net.jini.core"	/>

      <arg path="${build.classes}/net/jini"			/>
      <arg path="${build.classes}/com/sun/jini/discovery"	/>

    </java>

    <!-- ##								-->
    <!-- ## Generate the jar file.					-->
    <!-- ##								-->

    <delete file="${build.lib}/jini-ext.jar" quiet="true" />

    <jar destfile="${build.lib}/jini-ext.jar" 
         index="false"
	 manifest="${src.jini.manifest}/jini-ext.mf">
        
      <fileset	dir="${build.classes}"  includesfile="${jini-ext.deps}" />

    </jar>

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: jsk-debug-policy.jar					-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="jsk-debug-policy.jar"
	  depends="setup-all">
  
    <property name="jsk-debug-policy.deps" location="${build.deps}/jsk-debug-policy.deps" />
    
    <!-- ##								-->
    <!-- ## Run ClassDep.						-->
    <!-- ##								-->

    <java classname="com.sun.jini.tool.ClassDep"
          failonerror="true"
          output="${jsk-debug-policy.deps}">
          
      <classpath refid="path.classdep"					/>
      <arg value="-cp"							/>
      <arg path="${build.classes}"					/>
      <arg value="-files"						/>
      <arg line="${jskprivate.include}"					/>

      <arg line="-in com.sun.jini.tool"					/>

      <arg value="com.sun.jini.tool.DebugDynamicPolicyProvider"		/>

    </java>

    <!-- ##								-->
    <!-- ## Generate the jar file.					-->
    <!-- ##								-->

    <delete file="${build.lib}/jsk-debug-policy.jar" quiet="true" />

    <jar destfile="${build.lib}/jsk-debug-policy.jar"
         index="false"
         manifest="${src.tools.manifest}/jsk-debug-policy.mf">
         
      <fileset dir="${build.classes}"  includesfile="${jsk-debug-policy.deps}" />

    </jar>

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: jsk-dl.jar						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="jsk-dl.jar"
	  depends="setup-all">
  
    <property name="jsk-dl.deps" location="${build.deps}/jsk-dl.deps" />
    
    <!-- ##								-->
    <!-- ## Run ClassDep.						-->
    <!-- ##								-->

    <java classname="com.sun.jini.tool.ClassDep"
          failonerror="true"
          output="${jsk-dl.deps}">
          
      <classpath refid="path.classdep"					/>
      <arg value="-cp"							/>
      <arg path="${build.classes}"					/>
      <arg value="-files"						/>

      <arg line="-in com.sun.jini"					/>
      <arg line="-in net.jini"						/>

      <arg line="${jskplatform.exclude}"				/>

      <arg line="-skip net.jini.lookup.entry.EntryBeans" 		/>

      <arg path="${build.classes}/com/sun/jini/admin"			/>
      <arg path="${build.classes}/com/sun/jini/lease"			/>
      <arg path="${build.classes}/com/sun/jini/proxy"			/>
      <arg path="${build.classes}/net/jini/admin"			/>
      <arg path="${build.classes}/net/jini/entry"			/>
      <arg path="${build.classes}/net/jini/event"			/>
      <arg path="${build.classes}/net/jini/lookup/entry"		/>
      <arg path="${build.classes}/net/jini/space"			/>

      <arg value="com.sun.jini.jeri.internal.http.HttpParseException"	/>
      <arg value="com.sun.jini.landlord.ConstrainableLandlordLease"	/>
      <arg value="com.sun.jini.landlord.ConstrainableLandlordLeaseMap"	/>
      <arg value="com.sun.jini.landlord.Landlord"			/>
      <arg value="com.sun.jini.landlord.LandlordLease"			/>
      <arg value="com.sun.jini.landlord.LandlordLeaseMap"		/>
      <arg value="com.sun.jini.landlord.LandlordProxyVerifier"		/>
      <arg value="com.sun.jini.logging.Levels"				/>
      <arg value="com.sun.jini.lookup.entry.BasicServiceType"		/>
      <arg value="com.sun.jini.resource.ServiceConfigurationError"	/>
      <arg value="com.sun.jini.start.ServiceProxyAccessor"		/>

      <arg value="net.jini.discovery.LookupDiscoveryRegistration"	/>
      <arg value="net.jini.discovery.LookupDiscoveryService"		/>
      <arg value="net.jini.discovery.LookupUnmarshalException"		/>
      <arg value="net.jini.discovery.RemoteDiscoveryEvent"		/>
      <arg value="net.jini.lease.LeaseRenewalService"			/>
      <arg value="net.jini.lease.LeaseRenewalSet"			/>
      <arg value="net.jini.lease.LeaseUnmarshalException"		/>
      <arg value="net.jini.lease.RenewalFailureEvent"			/>
      <arg value="net.jini.lookup.DiscoveryAdmin"			/>
      <arg value="net.jini.lookup.ServiceDiscoveryManager$$LookupCacheImpl$$LookupListener_Stub"	/>

    </java>

    <!-- ##								-->
    <!-- ## Generate the jar file.					-->
    <!-- ##								-->

    <delete file="${build.lib-dl}/jsk-dl.jar" quiet="true" />

    <jar destfile="${build.lib-dl}/jsk-dl.jar" 
         index="false">
        
      <fileset	dir="${build.classes}"  includesfile="${jsk-dl.deps}" />

      <metainf dir="${src.jini.manifest}/jsk-dl/META-INF" />

    </jar>

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: jsk-lib.jar						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="jsk-lib.jar"
	  depends="setup-all">
  
    <property name="jsk-lib.deps" location="${build.deps}/jsk-lib.deps" />
    
    <!-- ##								-->
    <!-- ## Run ClassDep.						-->
    <!-- ##								-->

    <java classname="com.sun.jini.tool.ClassDep"
          failonerror="true"
          output="${jsk-lib.deps}">
          
      <classpath refid="path.classdep"					/>
      <arg value="-cp"							/>
      <arg path="${build.classes}"					/>
      <arg value="-files"						/>

      <arg line="-in com.sun.jini"					/>
      <arg line="-in net.jini"						/>

      <arg line="${jskplatform.exclude}"				/>

      <arg path="${build.classes}/com/sun/jini/admin"			/>
      <arg path="${build.classes}/com/sun/jini/config"			/>
      <arg path="${build.classes}/com/sun/jini/landlord"		/>
      <arg path="${build.classes}/com/sun/jini/lease"			/>
      <arg path="${build.classes}/com/sun/jini/lookup/entry"		/>
      <arg path="${build.classes}/com/sun/jini/proxy"			/>
      <arg path="${build.classes}/com/sun/jini/reliableLog"		/>
      <arg path="${build.classes}/com/sun/jini/resource"		/>
      <arg path="${build.classes}/com/sun/jini/thread"			/>
      <arg path="${build.classes}/net/jini"				/>
		
      <arg value="com.sun.jini.logging.Levels"				/>
      <arg value="com.sun.jini.phoenix.ActivationAdmin"			/>
      <arg value="com.sun.jini.start.LifeCycle"				/>
      <arg value="com.sun.jini.start.ServiceProxyAccessor"		/>

    </java>

    <!-- ##								-->
    <!-- ## Generate the jar file.					-->
    <!-- ##								-->

    <delete file="${build.lib}/jsk-lib.jar" quiet="true" />

    <jar destfile="${build.lib}/jsk-lib.jar" 
         index="false">
        
      <fileset	dir="${build.classes}"  includesfile="${jsk-lib.deps}" />

    </jar>

    <!-- ##                                                             -->
    <!-- ## Generate the Preferred List                                 -->
    <!-- ##                                                             -->

    <preferredlistgen>

      <plg-elements>

        <arg line="-jar"						/>
        <arg path="${build.lib}/jsk-lib.jar"				/>

        <arg line="-cp ${build.classes}"				/>

        <arg line="-api com.sun.jini.start.LifeCycle"			/>
        <arg line="-api com.sun.jini.start.ServiceProxyAccessor"	/>

      </plg-elements>

    </preferredlistgen>

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: jsk-platform.jar					-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="jsk-platform.jar"
	  depends="setup-all">
  
    <property name="jsk-platform.deps" location="${build.deps}/jsk-platform.deps" />
    
    <!-- ##								-->
    <!-- ## Run ClassDep.						-->
    <!-- ##								-->

    <java classname="com.sun.jini.tool.ClassDep"
          failonerror="true"
          output="${jsk-platform.deps}">
          
      <classpath refid="path.classdep"	/>
      <arg value="-cp"			/>
      <arg path="${build.classes}"	/>
      <arg value="-files"		/>

      <arg line="-in com.sun.jini"	/>
      <arg line="-in net.jini"		/>

      <arg path="${build.classes}/net/jini/activation"		/>
      <arg path="${build.classes}/net/jini/config"		/>
      <arg path="${build.classes}/net/jini/constraint"		/>
      <arg path="${build.classes}/net/jini/core"		/>
      <arg path="${build.classes}/net/jini/export"		/>
      <arg path="${build.classes}/net/jini/id"			/>
      <arg path="${build.classes}/net/jini/iiop"		/>
      <arg path="${build.classes}/net/jini/io"			/>
      <arg path="${build.classes}/net/jini/jeri"		/>
      <arg path="${build.classes}/net/jini/jrmp"		/>
      <arg path="${build.classes}/net/jini/loader"		/>
      <arg path="${build.classes}/net/jini/security"		/>
      <arg path="${build.classes}/net/jini/url"			/>
      <arg value="net.jini.discovery.ConstrainableLookupLocator"		/>
      <arg value="net.jini.discovery.ConstrainableLookupLocatorTrustVerifier"	/>

      <arg path="${build.classes}/com/sun/jini/discovery"	/>
      <arg value="com.sun.jini.config.ConfigUtil"				/>
      <arg value="com.sun.jini.config.KeyStores"				/>
      <arg value="com.sun.jini.logging.LogManager"				/>

    </java>

    <!-- ##								-->
    <!-- ## Generate the jar file.					-->
    <!-- ##								-->

    <delete file="${build.lib}/jsk-platform.jar" quiet="true" />

    <jar destfile="${build.lib}/jsk-platform.jar" 
         index="false"
	 manifest="${src.jini.manifest}/jsk-platform.mf">
         
      <fileset	dir="${build.classes}"  includesfile="${jsk-platform.deps}" />

    </jar>

    <!-- ##                                                             -->
    <!-- ## Generate the Preferred List                                 -->
    <!-- ##                                                             -->

    <preferredlistgen>

      <plg-elements>

        <arg line="-jar"						/>
        <arg path="${build.lib}/jsk-platform.jar"				/>

        <arg line="-cp ${build.classes}"				/>
	<arg line="-api net/jini/activation/-"		/>
	<arg line="-api net/jini/config/-"		/>
	<arg line="-api net/jini/constraint/-"		/>
	<arg line="-api net/jini/core/-"		/>
	<arg line="-api net/jini/export/-"		/>
	<arg line="-api net/jini/id/-"			/>
	<arg line="-api net/jini/iiop/-"		/>
	<arg line="-api net/jini/io/-"			/>
	<arg line="-api net/jini/jeri/-"		/>
	<arg line="-api net/jini/jrmp/-"		/>
	<arg line="-api net/jini/loader/-"		/>
	<arg line="-api net/jini/security/-"		/>
	<arg line="-api net/jini/url/-"			/>

	<arg line="-api net.jini.discovery.ConstrainableLookupLocator"		/>
	<arg line="-api net.jini.discovery.ConstrainableLookupLocatorTrustVerifier"	/>
	<arg line="-api net.jini.security.AuthenticationPermission$AuthenticationPermissionCollection"		/>
	<arg line="-api net.jini.security.GrantPermission$GrantPermissionCollection"		/>
	<arg line="-api com/sun/jini/discovery/"	/>
	<arg line="-api com/sun/jini/discovery/kerberos/-"	/>
	<arg line="-api com/sun/jini/discovery/plaintext/-"	/>
	<arg line="-api com/sun/jini/discovery/ssl/-"	/>
	<arg line="-api com/sun/jini/discovery/x500/-"	/>
	<arg line="-api com.sun.jini.config.ConfigUtil"				/>
	<arg line="-api com.sun.jini.config.KeyStores"				/>
	<arg line="-api com.sun.jini.logging.LogManager"				/>

      </plg-elements>

    </preferredlistgen>

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: jsk-policy.jar					-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="jsk-policy.jar"
	  depends="setup-all">
  
    <property name="jsk-policy.deps" location="${build.deps}/jsk-policy.deps" />
    
    <!-- ##								-->
    <!-- ## Run ClassDep.						-->
    <!-- ##								-->

    <java classname="com.sun.jini.tool.ClassDep"
          failonerror="true"
          output="${jsk-policy.deps}">
          
      <classpath refid="path.classdep"	/>
      <arg value="-cp"			/>
      <arg path="${build.classes}"	/>
      <arg value="-files"		/>

      <arg value="net.jini.security.policy.DynamicPolicyProvider"	/>
      <arg value="net.jini.security.policy.PolicyFileProvider"		/>

      <arg line="-in com.sun.jini"	/>
      <arg line="-in net.jini"		/>

    </java>

    <!-- ##								-->
    <!-- ## Generate the jar file.					-->
    <!-- ##								-->

    <delete file="${build.lib-ext}/jsk-policy.jar" quiet="true" />

    <jar destfile="${build.lib-ext}/jsk-policy.jar" 
         index="false">
         
      <fileset	dir="${build.classes}"  includesfile="${jsk-policy.deps}" />

    </jar>

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: jsk-resources.jar					-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="jsk-resources.jar"
	  depends="setup-all">
  
    <delete file="${build.lib}/jsk-resources.jar" quiet="true" />

    <jar destfile="${build.lib}/jsk-resources.jar" 
	 index="false">

      <fileset	dir="${src.jini.manifest}/jsk-resources"
		includes="META-INF/services/com.sun.jini.discovery.DiscoveryFormatProvider
			  META-INF/services/java.rmi.server.RMIClassLoaderSpi
			  META-INF/services/net.jini.security.TrustVerifier
			  META-INF/services/net.jini.security.IntegrityVerifier
			  META-INF/services/net.jini.export.ServerContext$$Spi" />
    </jar>

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: start.jar						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="start.jar"
	  depends="setup-all">

    <!-- ##								-->
    <!-- ## This jar must be built before checkconfigurationfile.jar ,	-->
    <!-- ## which is why this target is defined here.  This target 	-->
    <!-- ## simply redirects ant to the actual start.jar target 	-->
    <!-- ## definition.							-->
    <!-- ##								-->

    <ant target="start.jar"
	 antfile="build.xml"
	 dir="${src.jini}/com/sun/jini/start"
	 inheritall="false"
         inheritrefs="true"/>

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: sun-util.jar						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="sun-util.jar"
          description=""
	  depends="setup-all">
  
    <property name="sun-util.deps" location="${build.deps}/sun-util.deps" />
    
    <!-- ##								-->
    <!-- ## Run ClassDep.						-->
    <!-- ##								-->

    <java classname="com.sun.jini.tool.ClassDep"
          failonerror="true"
          output="${sun-util.deps}">
          
      <classpath refid="path.classdep"	/>
      <arg value="-cp"			/>
      <arg path="${build.classes}"	/>
      <arg value="-files"		/>

      <arg value="com.sun.jini.discovery.ClientSubjectChecker"		/>
      <arg value="com.sun.jini.fiddler.FiddlerAdmin"			/>
      <arg value="com.sun.jini.outrigger.ConstrainableJavaSpaceAdmin"	/>
      <arg value="com.sun.jini.phoenix.ActivationAdmin"			/>
      <arg value="com.sun.jini.start.LifeCycle"				/>
      <arg value="com.sun.jini.start.ServiceProxyAccessor"		/>

      <arg line="-in com.sun.jini" />

    </java>

    <!-- ##								-->
    <!-- ## Generate the jar file.					-->
    <!-- ##								-->

    <delete file="${build.lib}/sun-util.jar" quiet="true" />

    <jar destfile="${build.lib}/sun-util.jar" 
	 duplicate="preserve"
         index="false">
         
      <fileset	dir="${build.classes}"  includesfile="${sun-util.deps}" />

      <fileset	dir="${build.classes}"
		includes="com/sun/jini/action/**
			  com/sun/jini/admin/**
			  com/sun/jini/collection/**
			  com/sun/jini/config/**
			  com/sun/jini/constants/**
			  com/sun/jini/landlord/**
			  com/sun/jini/lease/**
			  com/sun/jini/logging/**
			  com/sun/jini/lookup/entry/**
			  com/sun/jini/proxy/**
			  com/sun/jini/reliableLog/**
			  com/sun/jini/resource/**
			  com/sun/jini/system/**
			  com/sun/jini/thread/**" />
    </jar>

  </target>


  <!-- ################################################################ -->
  <!-- ##								-->
  <!-- ## TARGET: this.stubs						-->
  <!-- ##								-->
  <!-- ################################################################ -->

  <target name="this.stubs" description="Just a dummy target.">

  </target>

</project>

